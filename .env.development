# Multi-stage build for Next.js application - Optimized for 2GB VPS
# ============================================================================
# Stage 1: Builder with optimized dependencies caching
# ============================================================================
FROM node:20-alpine AS builder

WORKDIR /app

# Install build dependencies
RUN apk add --no-cache python3 make g++

# Copy package files first (best layer caching)
COPY package-lock.json package.json ./

# Install dependencies with npm ci for consistency and reproducibility
RUN npm ci --verbose

# Copy source code
COPY . .

# Build the application with optimizations
ENV NODE_OPTIONS="--max-old-space-size=1024"
RUN npm run build

# ============================================================================
# Stage 2: Runtime - Minimal production image
# ============================================================================
FROM node:20-alpine

WORKDIR /app

# Install runtime dependencies
RUN apk add --no-cache dumb-init wget ca-certificates

# Set NODE_ENV for production
ENV NODE_ENV=production
ENV NODE_OPTIONS="--max-old-space-size=512"

# Copy package files for production dependencies
COPY --from=builder /app/package-lock.json /app/package.json ./

# Install production dependencies only
RUN npm ci --only=production && npm cache clean --force

# Copy built application from builder stage - با شرط
COPY --from=builder /app/.next ./.next
COPY --from=builder /app/public ./public

# Copy config files only if they exist
COPY --from=builder /app/next.config.js ./ || true
COPY --from=builder /app/next.config.mjs ./ || true  
COPY --from=builder /app/next.config.ts ./ || true
COPY --from=builder /app/next-intl.config.js ./ || true
COPY --from=builder /app/next-intl.config.ts ./ || true
COPY --from=builder /app/next-i18next.config.js ./ || true

# Create non-root user for security
RUN addgroup -g 1001 -S nodejs && \
  adduser -S nextjs -u 1001 && \
  chown -R nextjs:nodejs /app

USER nextjs

# Expose port
EXPOSE 3000

# Health check with optimizations
HEALTHCHECK --interval=60s --timeout=5s --start-period=45s --retries=3 \
  CMD wget --quiet --tries=1 --spider http://localhost:3000 || exit 1

# Use dumb-init to properly handle signals and PID 1
ENTRYPOINT ["dumb-init", "--"]

# Start the application
CMD ["npm", "start"]